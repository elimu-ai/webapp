package ai.elimu.dao;

import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.MethodOrderer.MethodName;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.ClassRelativeResourceLoader;
import org.springframework.core.io.Resource;
import org.springframework.core.io.ResourceLoader;
import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;

import ai.elimu.entity.analytics.LetterSoundLearningEvent;
import ai.elimu.util.csv.CsvAnalyticsExtractionHelper;

@SpringJUnitConfig(locations = {
    "file:src/main/webapp/WEB-INF/spring/applicationContext.xml",
    "file:src/main/webapp/WEB-INF/spring/applicationContext-jpa.xml"
})
@TestMethodOrder(MethodName.class)
public class LetterSoundLearningEventDaoTest {

    private final LetterSoundLearningEventDao letterSoundLearningEventDao;

    @Autowired
    public LetterSoundLearningEventDaoTest(LetterSoundLearningEventDao letterSoundLearningEventDao) {
        this.letterSoundLearningEventDao = letterSoundLearningEventDao;
    }
    
    /**
     * Test storage of data extracted from CSV file generated by version 3002014 of the Analytics app: 
     * https://github.com/elimu-ai/analytics/releases/tag/3.2.14
     */
    @Test
    public void testCreate_v3002014() throws IOException {
        ResourceLoader resourceLoader = new ClassRelativeResourceLoader(CsvAnalyticsExtractionHelper.class);
        Resource resource = resourceLoader.getResource("5b7c682a12ecbe2e_3002014_letter-sound-learning-events_2025-05-11.csv");
        File csvFile = resource.getFile();

        Long eventCountBefore = letterSoundLearningEventDao.readCount();

        List<LetterSoundLearningEvent> letterSoundLearningEvents = CsvAnalyticsExtractionHelper.extractLetterSoundLearningEvents(csvFile);
        for (LetterSoundLearningEvent letterSoundLearningEvent : letterSoundLearningEvents) {
            letterSoundLearningEventDao.create(letterSoundLearningEvent);
        }

        Long eventCountAfter = letterSoundLearningEventDao.readCount();
        assertEquals(eventCountBefore + letterSoundLearningEvents.size(), eventCountAfter);
    }
}
